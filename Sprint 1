import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics

# loading the csv data to a Pandas DataFrame
gold_data = pd.read_csv('/content/gld_price_data (3).csv')

# print first 5 rows in the dataframe
gold_data.head()

# print last 5 rows of the dataframe
gold_data.tail()

# number of rows and columns
gold_data.shape

# getting some basic informations about the data
gold_data.info()

# checking the number of missing values
gold_data.isnull().sum()

# getting the statistical measures of the data
gold_data.describe()

df = pd.DataFrame(gold_data)
fig,ax=plt.subplots(ncols=5,nrows=1,figsize=(10,4))
hg=df[['SPX', 'GLD', 'USO', 'SLV', 'EUR/USD']]
index=0
ax=ax.flatten()
for col,value in hg.items():
  sns.boxplot(y=col,data=hg,ax=ax[index])
  index +=1
plt.tight_layout(pad=0.5,w_pad=0.7,h_pad=5.0)

# Define a threshold for Z-scores (e.g., 2 or 3)
z_threshold = 2

# Calculate Z-scores for all columns except the 'Date'
z_scores = df.iloc[:, 1:].apply(lambda x: np.abs((x - x.mean()) / x.std()))

# Identify and filter out outliers
outliers = (z_scores > z_threshold).any(axis=1)
filtered_df = df[~outliers]

# Print the DataFrame with outliers removed
print(filtered_df)

df = pd.DataFrame(gold_data)
fig,ax=plt.subplots(ncols=5,nrows=1,figsize=(10,4))
hg=filtered_df[['SPX', 'GLD', 'USO', 'SLV', 'EUR/USD']]
index=0
ax=ax.flatten()
for col,value in hg.items():
  sns.boxplot(y=col,data=hg,ax=ax[index])
  index +=1
plt.tight_layout(pad=0.5,w_pad=0.7,h_pad=5.0)

correlation = gold_data.corr()

# constructing a heatmap to understand the correlatiom
plt.figure(figsize = (6,6))
sns.heatmap(correlation, cbar=True, square=True, fmt='.1f',annot=True, annot_kws={'size':8}, cmap='Blues')

# checking the distribution of the GLD Price
sns.distplot(gold_data['GLD'],color='green')
